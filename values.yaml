# Default values for pgbouncer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

pgbouncer:
  image:
    registry: docker.io
    repository: iloveyatoo/pgbouncer
    tag: "0.16.1"
    pullPolicy: Always
  port: 5432
  auth:
    type: md5
    query: "SELECT usename, passwd FROM pg_shadow WHERE usename=$1"
  users:
    pgbouncer: "md5passwordhere"
  databases:
    '*':
      user: pgbouncer
      host: postgres-address
      port: 5432
  ssl:
    client:
      tls_sslmode: disable
      tls_ca_file: /etc/ssl/ca.crt
      tls_key_file: /etc/ssl/server.crt
      tls_cert_file: /etc/ssl/server.key
      tls_ciphers: fast
      tls_protocols: secure
      tls_dheparams: auto
      tls_ecdhcurve: auto
    server:
      tls_sslmode: disable
      tls_ca_file: /etc/ssl/ca.crt
      tls_key_file: /etc/ssl/server.crt
      tls_cert_file: /etc/ssl/server.key
      tls_protocols: secure
      tls_ciphers: secure
  hba: []